var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": ""
},

{
    "location": "#wiki-1",
    "page": "Home",
    "title": "wiki",
    "category": "section",
    "text": "note: Note\nThis is a wiki(or blog) generated by Documenter.jlDocumenter, a package for building documentation from docstrings and markdown files."
},

{
    "location": "#Contents-1",
    "page": "Home",
    "title": "Contents",
    "category": "section",
    "text": ""
},

{
    "location": "Algorithm/autodiff/#",
    "page": "自动微分",
    "title": "自动微分",
    "category": "page",
    "text": ""
},

{
    "location": "Algorithm/autodiff/#自动微分-1",
    "page": "自动微分",
    "title": "自动微分",
    "category": "section",
    "text": "函数求导是一件很常见的数学操作。在我们已知函数形式的情况下，如何通过计算机求函数的导数呢？ 很容易想到的是以下两种方法：根据求导规则进行符号计算， sin(x) = cos(x)\n通过差分计算， sin(x+h)-sin(x)h这里，mutable struct Dual <: Number\n    v::Float64\n    d::Float64\nend\n\nimport Base: +, -, *, /, show\n\nBase.show(io::IO,x::Dual) = print(\"$(x.v) + $(x.d)ϵ\")\n\n(+)(x::Dual, y::Dual) = Dual(x.v+y.v, x.d+y.d)\n(-)(x::Dual, y::Dual) = Dual(x.v-y.v, x.d-y.d)\n(*)(x::Dual, y::Dual) = Dual(x.v*y.v, x.v*y.d+x.d*y.v)\n(/)(x::Dual, y::Dual) = Dual(x.v/y.v, (x.d*y.v-x.v*y.d)/y.v/y.v)\nconvert(::Type{Dual}, x::Real) = Dual(x,zero(x))\npromote_rule(::Type{Dual}, ::Type{<:Number}) = Dual"
},

{
    "location": "Python/#",
    "page": "Python 学习记录",
    "title": "Python 学习记录",
    "category": "page",
    "text": ""
},

{
    "location": "Python/#Python-学习记录-1",
    "page": "Python 学习记录",
    "title": "Python 学习记录",
    "category": "section",
    "text": ""
},

{
    "location": "Python/#快速启动HTTPServer-1",
    "page": "Python 学习记录",
    "title": "快速启动HTTPServer",
    "category": "section",
    "text": "在命令行界面某目录中，执行python -m SimpleHTTPServer可以快速启动一个http服务，默认监听本地所有地址的8000端口, 浏览器中打开，即可看到目录下的文件"
},

{
    "location": "Python/#sys.argv获取命令行参数-1",
    "page": "Python 学习记录",
    "title": "sys.argv获取命令行参数",
    "category": "section",
    "text": "用于简单的接受命令行传进的参数, 返回一个普通的列表$ cat test.py\n#!/usr/bin/env python\nimport sys\nprint(sys.argv)\n$ ./test.py -n 1\n[\'test.py\', \'-n\', \'1\']"
},

{
    "location": "Python/#标准输入输出-1",
    "page": "Python 学习记录",
    "title": "标准输入输出",
    "category": "section",
    "text": "在sys库中定义了三个文件描述符，stdin, stdout, stderr"
},

{
    "location": "Python/#从stdin读取内容-1",
    "page": "Python 学习记录",
    "title": "从stdin读取内容",
    "category": "section",
    "text": "$ cat test.py\nimport sys\nfor line in sys.stdin:\n    print(line)\n$ ./test.py <<eof\n1\neof\n1这里stdin是文件操作符，python已经自带了一个读取的方法，我想应当等效于for line in sys.stdin.readlines():\n    print(line)对Julia，需要使用类似上面的操作。"
},

{
    "location": "Python/#向stdout-stderr写入-1",
    "page": "Python 学习记录",
    "title": "向stdout stderr写入",
    "category": "section",
    "text": "一般用print就可以了$ cat test.py\nimport sys\nsys.stdout.write(\"hello\")\nsys.stderr.write(\"world\")\n$ ./test.py  > /dev/null\nworld\n$ ./test.py 2> /dev/null\nhello程序退出码sys.exit(1)"
},

{
    "location": "Python/#fileinput-标准库-1",
    "page": "Python 学习记录",
    "title": "fileinput 标准库",
    "category": "section",
    "text": "使用stdin只能从标准输入读取内容，fileinput标准库实现了文件的读取（也可以读取标准输入）$ cat test.py\nimport fileinput\nfor line in fileinput.input()\n    print(line,end=\"\")\n$ ./test.py < /etc/passwd还定义了一些方法，用以输出文件名、行号等信息，有filename, fileno, filelineno, isfirstline, isstdin, nextfile等"
},

{
    "location": "Python/#getpass-标准库-1",
    "page": "Python 学习记录",
    "title": "getpass 标准库",
    "category": "section",
    "text": "用以获得当前用户用户名，和在终端上安全的输入密码$ cat test.py\nimport getpass\nuser = getpass.getuser()\npasswd = getpass.getpass(\"Password: \")\n$ ./test.py\nPassword:   在此输入，屏幕无显示\nliuxu\n123Julia也实现了getpass，不过没有exportio = Base.getpass(\"input\")\nss = read(io,String)\nBase.shred!(io)\nprintln(ss)"
},

{
    "location": "Fortran/Qsort/#",
    "page": "Quick Sort",
    "title": "Quick Sort",
    "category": "page",
    "text": ""
},

{
    "location": "Fortran/Qsort/#Quick-Sort-1",
    "page": "Quick Sort",
    "title": "Quick Sort",
    "category": "section",
    "text": "module msort\n    implicit none\n\ncontains\n\n    function selectpivot(dataset,istart,iend) result(pivot)\n        implicit none\n\n        real(8), dimension(:) :: dataset\n        integer, value :: istart, iend\n        integer :: imid\n        real(8) :: pivot\n        real(8) :: tmp\n\n        imid = (istart+iend) / 2\n\n        if ( dataset(istart) > dataset(imid) ) then\n            tmp = dataset(istart)\n            dataset(istart) = dataset(imid)\n            dataset(imid) = tmp\n        end if\n\n        if ( dataset(iend) < dataset(imid) ) then\n            if ( dataset(iend) > dataset(istart) ) then\n                tmp = dataset(iend)\n                dataset(iend) = dataset(imid)\n                dataset(imid) = tmp\n            else\n                tmp = dataset(iend)\n                dataset(iend) = dataset(imid)\n                dataset(imid) = dataset(istart)\n                dataset(istart) = tmp\n            end if\n        end if\n\n        !^ istart <= imid <= iend\n\n        tmp = dataset(imid)\n        dataset(imid) = dataset(istart)\n        dataset(istart) = tmp\n\n        !^ swap istart and imid\n\n        pivot = tmp\n    end function\n\n    function partition(dataset,istart,iend) result(ipivot)\n        implicit none\n\n        real(8), dimension(:) :: dataset\n        integer, value :: istart, iend\n        integer :: ipivot\n        real(8) :: pivot\n        integer :: i, j\n        real(8) :: tmp\n\n        i = istart\n        j = iend\n\n        pivot = selectpivot(dataset,istart,iend)\n\n        do\n            i = i + 1\n            j = j - 1\n            do while ( dataset(i) < pivot )\n                i = i + 1\n            end do\n            do while ( dataset(j) > pivot )\n                j = j - 1\n            end do\n            if ( i>=j ) exit\n            tmp = dataset(j)\n            dataset(j) = dataset(i)\n            dataset(i) = tmp\n        end do\n        dataset(istart) = dataset(j)\n        dataset(j) = pivot\n\n        ipivot = j\n    end function\n\n    recursive subroutine sort_kernel(dataset,istart,iend)\n        implicit none\n\n        real(8), dimension(:) :: dataset\n        integer, value :: istart, iend\n        integer :: ipivot\n\n        do while ( istart < iend )\n            ipivot = partition(dataset,istart,iend)\n            if ( ipivot-istart < iend-ipivot ) then\n                if ( istart < ipivot-1 ) then\n                    call sort_kernel(dataset,istart,ipivot-1)\n                end if\n                istart = ipivot + 1\n            else\n                if ( iend > ipivot+1 ) then\n                    call sort_kernel(dataset,ipivot+1,iend)\n                end if\n                iend = ipivot - 1\n            end if\n        end do\n    end subroutine\n\n    subroutine sort(dataset)\n        implicit none\n\n        real(8), dimension(:) :: dataset\n        integer :: n\n\n        n = size(dataset)\n\n        call sort_kernel(dataset,1,n)\n    end subroutine\n\n    function issorted(dataset) result(re)\n        implicit none\n\n        real(8), dimension(:) :: dataset\n        logical :: re\n        integer :: i\n\n        re = .true.\n\n        do i=2, size(dataset)\n            if ( dataset(i) < dataset(i-1) ) then\n                re = .false.\n                exit\n            end if\n        end do\n    end function\n\nend module"
},

{
    "location": "Ops/#",
    "page": "系统运维",
    "title": "系统运维",
    "category": "page",
    "text": ""
},

{
    "location": "Ops/#系统运维-1",
    "page": "系统运维",
    "title": "系统运维",
    "category": "section",
    "text": ""
},

{
    "location": "Ops/#磁盘监控-1",
    "page": "系统运维",
    "title": "磁盘监控",
    "category": "section",
    "text": ""
},

{
    "location": "Ops/#iotop-1",
    "page": "系统运维",
    "title": "iotop",
    "category": "section",
    "text": "iotop用来监控磁盘I/O，可以提供PID、用户、进程等相关信息。和top类似，提供快捷键。 iotop使用Python编写，需要Linux Kernel 2.6.20以上版本 官方主页: http://guichaz.free.fr/iotop/"
},

{
    "location": "Ops/#选项列表-1",
    "page": "系统运维",
    "title": "选项列表",
    "category": "section",
    "text": "-o, –only: 只显示有I/O操作的进程\n-b, –batch: 非交互模式，可用于向文件导出\n-d, –delay=: 统计间隔\n-n, –iter=: 统计次数，完后退出\n-u, –user=: 指定监控用户\n-P, –processes: 仅限进程\n-a: 显示累计值而非带宽\n-t: 输出时间戳\n-q, -qq, -qqq: 隐藏列名称，统计摘要等"
},

{
    "location": "Ops/#快捷键-1",
    "page": "系统运维",
    "title": "快捷键",
    "category": "section",
    "text": "左右方向键，选定排序主列\np，切换进程线程显示\nr，反向排序\na，切换带宽/累计\no，同上段"
},

{
    "location": "Digest/#",
    "page": "文摘",
    "title": "文摘",
    "category": "page",
    "text": ""
},

{
    "location": "Digest/#文摘-1",
    "page": "文摘",
    "title": "文摘",
    "category": "section",
    "text": ""
},

{
    "location": "Digest/#鲁迅-1",
    "page": "文摘",
    "title": "鲁迅",
    "category": "section",
    "text": ""
},

{
    "location": "Digest/#我们现在怎样做父亲-1",
    "page": "文摘",
    "title": "我们现在怎样做父亲",
    "category": "section",
    "text": "我作这一篇文的本意，其实是想研究怎样改革家庭；又因为中国亲权重，父权更重，所以尤想对于从来认为神圣不可侵犯的父子问题，发表一点意见。总而言之：只是革命要革到老子身上罢了。但何以大模大样，用了这九个字的题目呢?这有两个理由：第一，中国的“圣人之徒”，最恨人动摇他的两样东西。一样不必说，也与我辈绝不相干；一样便是他的伦常，我辈却不免偶然发几句议论，所以株连牵扯，很得了许多“铲伦常”“禽兽行”之类的恶名。他们以为父对于子，有绝对的权力和威严；若是老子说话，当然无所不可，儿子有话，却在未说之前早已错了。但祖父子孙，本来各各都只是生命的桥梁的一级，决不是固定不易的。现在的子，便是将来的父，也便是将来的祖。我知道我辈和读者，若不是现任之父，也一定是候补之父，而且也都有做祖宗的希望，所差只在一个时间。为想省却许多麻烦起见，我们便该无须客气，尽可先行占住了上风，摆出父亲的尊严，谈谈我们和我们子女的事；不但将来着手实行，可以减少困难，在中国也顺理成章，免得“圣人之徒”听了害怕，总算是一举两得之至的事了。所以说，“我们怎样做父亲。”第二，对于家庭问题，我在“新青年”的“随感录”(二五、四十、四九)中，曾经略略说及，总括大意，便只是从我们起，解放了后来的人。论到解放子女，本是极平常的事，当然不必有什么讨论。但中国的老年，中了旧习惯旧思想的毒太深了，决定悟不过来。譬如早晨听到乌鸦叫，少年毫不介意，迷信的老人，却总须颓唐半天。虽然很可怜，然而也无法可救。没有法，便只能先从觉醒的人开手，各自解放了自己的孩子。自己背着因袭的重担，肩住了黑暗的闸门，放他们到宽阔光明的地方去；此后幸福的度日，合理的做人。还有，我曾经说，自己并非创作者，便在上海报纸的“新教训”里，挨了一顿骂。但我辈评论事情，总须先评论了自己，不要冒充，才能象一篇说话，对得起自己和别人。我自己知道，不特并非创作者，并且也不是真理的发见者。凡有所说所写，只是就平日见闻的事理里面，取了一点心以为然的道理；至于终极究竟的事，却不能知。便是对于数年以后的学说的进步和变迁，也说不出会到如何地步，单相信比现在总该还有进步还有变迁罢了。所以说，“我们现在怎样做父亲”。我现在心以为然的道理，极其简单。便是依据生物界的现象，一，要保存生命；二，要延续这生命；三，要发展这生命(就是进化)。生物都这样做，父亲也就是这样做。生命的价值和生命价值的高下，现在可以不论。单照常识判断，便知道既是生物，第一要紧的自然是生命。因为生物之所以为生物，全在有这生命，否则失了生物的意义。生物为保存生命起见，具有种种本能，最显著的是食欲。因有食欲才摄取食品，因有食品才发生温热，保存了生命。但生物的个体，总免不了老衰和死亡，为继续生命起见，又有一种本能，便是性欲。因性欲才有性交，因有性交才发生苗裔，继续了生命。所以食欲是保存自己，保存现在生命的事；性欲是保存后裔，保存永久生命的事。饮食并非罪恶，并非不净；性交也就并非罪恶，并非不净。饮食的结果，养活了自己，对于自己没有恩；性交的结果，生出子女，对于子女当然也算不了恩。——前前后后，都向生命的长途走去，仅有先后的不同，分不出谁受谁的恩典。可惜的是中国的旧见解，竟与这道理完全相反。夫妇是“人伦之中”，却说是“人伦之始”；性交是常事，却以为不净；生育也是常事，却以为天大的大功。人人对于婚姻，大抵先夹带着不净的思想。亲戚朋友有许多戏谑，自己也有许多羞涩，直到生了孩子，还是躲躲闪闪，怕敢声明；独有对于孩子，却威严十足。这种行径，简直可以说是和偷了钱发迹的财主，不相上下了。我并不是说，——如他们攻击者所意想的，——人类的性交也应如别种动物，随便举行；或如无耻流氓，专做些下流举动，自鸣得意。是说，此后觉醒的人，应该先洗净了东方固有的不净思想，再纯洁明白一些，了解夫妇是伴侣，是共同劳动者，又是新生命创造者的意义。所生的子女，固然是受领新生命的人，但他也不永久占领，将来还要交付子女，象他们的父母一般。只是前前后后，都做一个过付的经手人罢了。生命何以必需继续呢?就是因为要发展，要进化。个体既然免不了死亡，进化又毫无止境，所以只能延续着，在这进化的路上走。走这路须有一种内的努力，有如单细胞动物有内的努力，积久才会繁复，无脊椎动物有内的努力，积久才会发生脊椎。所以后起的生命，总比以前的更有意义，更近完全，因此也更有价值，更可宝贵；前者的生命，应该牺牲于他。但可惜的是中国的旧见解，又恰恰与这道理完全相反。本位应在幼者，却反在长者；置重应在将来，却反在过去。前者做了更前者的牺牲，自己无力生存，却苛责后者又来专做他的牺牲，毁灭了一切发展本身的能力。我也不是说，——如他们攻击者所意想的，——孙子理应终日痛打他的祖父，女儿必须时时咒骂他的亲娘。是说，此后觉醒的人，应该先洗净了东方古传的谬误思想，对于子女，义务思想须加多，而权利思想却大可切实核减，以准备改作幼者本位的道德。况且幼者受了权利，也并非永久占有，将来还要对于他们的幼者，仍尽义务。只是前前后后，都做一切过付的经手人罢了。“父子间没有什么恩”这一个断语，实是招致“圣人之徒”面红耳赤的一大原因。他们的误点，便在长者本位与利己思想，权利思想很重，义务思想和责任心却很轻。以为父子关系，只须“父兮生我”一件事，幼者的全部，便应为长者所有。尤其堕落的，是因此责望报偿，以为幼者的全部，理该做长者的牺牲，殊不知自然界的安排，却件件与这要求反对，我从古以来，逆天行事，于是人的能力，十分萎缩，社会的进步，也就跟着停顿。我们虽不能说停顿便要灭亡，但较之进步，总是停顿与灭亡的路相近。自然界的安排，虽不免也有缺点，但结合长幼的方法，却并无错误。他并不用“恩”，却给与生物以一种天性，我们称他为“爱”。动物界中除了生子数目太多一一爱不周到的如鱼类之外，总是挚爱他的幼子，不但绝无利益心情，甚或至于牺牲了自己，让他的将来的生命，去上那发展的长途。人类也不外此，欧美家庭，大抵以幼者弱者为本位，便是最合于这生物学的真理的办法。便在中国，只要心思纯白，未曾经过“圣人之徒”作践的人，也都自然而然的能发现这一种天性。例如一个村妇哺乳婴儿的时候，决不想到自己正在施恩；一个农夫娶妻的时候，也决不以为将要放债。只是有了子女，即天然相爱，愿他生存；更进一步的，便还要愿他比自己更好，就是进化。这离绝了交换关系利害关系的爱，便是人伦的索子，便是所谓“纲”。倘如旧说，抹煞了“爱”，一味说“恩”，又因此责望报偿，那便不但败坏了父子间的道德，而且也大反于做父母的实际的真情，播下乖剌的种子。有人做了乐府，说是“劝孝”，大意是什么“儿子上学堂，母亲在家磨杏仁，预备回来给他喝，你还不孝么”之类，自以为“拚命卫道”。殊不知富翁的杏酪和穷人的豆浆，在爱情上价值同等，而其价值却正在父母当时并无求报的心思；否则变成买卖行为，虽然喝了杏酪，也不异“人乳喂猪”，无非要猪肉肥美，在人伦道德上，丝毫没有价值了。所以我现在心以为然的，便只是“爱”。无论何国何人，大都承认“爱己”是一件应当的事。这便是保存生命的要义，也就是继续生命的根基。因为将来的运命，早在现在决定，故父母的缺点，便是子孙灭亡的伏线，生命的危机。易卜生做的“群鬼”(有潘家洵君译本，载在“新潮”一卷五号)虽然重在男女问题，但我们也可以看出遗传的可怕。欧士华本是要生活，能创作的人，因为父亲的不检，先天得了病毒，中途不能做人了。他又很爱母亲，不忍劳他服侍，便藏着吗啡，想待发作时候，由使女瑞琴帮他吃下，毒杀了自己；可是瑞琴走了。他于是只好托他母亲了。欧 “母亲，现在应该你帮我的忙了。”阿夫人 “我吗?”欧 “谁能及得上你。”阿夫人 “我!你的母亲!”欧 “正为那个。”阿夫人 “我，生你的人!”欧 “我不曾教你生我。并且给我的是一种什么日子?我不要他!你拿回去罢!”这一段描写，实在是我们做父亲的人应该震惊戒惧佩服的；决不能昧了良心，说儿子理应受罪。这种事情，中国也很多，只要在医院做事，便能时时看见先天梅毒性病儿的惨状；而且傲然的送来的，又大抵是他的父母。但可怕的遗传，并不只是梅毒；另外许多精神上体质上的缺点，也可以传之子孙，而且久而久之，连社会都蒙着影响。我们且不高谈人群，单为子女说，便可以说凡是不爱己的人，实在欠缺做父亲的资格。就令硬做了父亲，也不过如古代的草寇称王一般，万万算不了正统。将来学问发达，社会改造时，他们侥幸留下的苗裔，恐怕总不免要受善种学(Eugenics)者的处置。倘若现在父母并没有将什么精神上体质上的缺点交给子女，又不遇意外的事，子女便当然健康，总算已经达到了继续生命的目的。但父母的责任还没有完，因为生命虽然继续了，却是停顿不得，所以还须教这新生命去发展。凡动物较高等的，对于幼雏，除了养育保护以外，往往还教他们生存上必需的本领。例如飞禽便教飞翔，鸷兽便教搏击。人类更高几等，便也有愿意子孙更进一层的天性。这也是爱，上文所说的是对于现在，这是对于将来。只要思想未遭锢蔽的人，谁也喜欢子女比自己更强，更健康，更聪明高尚，——更幸福；就是超越了自己，超越了过去。超越便须改变，所以子孙对于祖先的事，应该改变，“三年无改于父之道可谓孝矣”，当然是曲说，是退婴的病根。假使古代的单细胞动物，也遵着这教训，那便永远不敢分裂繁复，世界上再也不会有人类了。幸而这一类教训，虽然害过许多人，却还未能完全扫尽了一切人的天性。没有读过“圣贤书”的人，还能将这天性在名教的斧钺底下，时时流露，时时萌蘖；这便是中国人虽然雕落萎缩，却未灭绝的原因。所以觉醒的人，此后应将这天性的爱，更加扩张，更加醇化；用无我的爱，自己牺牲于后起新人。开宗第一，便是理解。往昔的欧人对于孩子的误解，是以为成人的预备；中国人的误解，是以为缩小的成人。直到近来，经过许多学者的研究，才知道孩子的世界，与成人截然不同；倘不先行理解，一味蛮做，便大碍于孩子的发达。所以一切设施，都应该以孩子为本位，日本近来，觉悟的也很不少；对于儿童的设施，研究儿童的事业，都非常兴盛了。第二，便是指导。时势既有改变，生活也必须进化；所以后起的人物，一定尤异于前，决不能用同一模型，无理嵌定。长者须是指导者协商者，却不该是命令者。不但不该责幼者供奉自己；而且还须用全副精神，专为他们自己，养成他们有耐劳作的体力，纯洁高尚的道德，广博自由能容纳新潮流的精神，也就是能在世界新潮流中游泳，不被淹没的力量。第三，便是解放。子女是即我非我的人，但既已分立，也便是人类中的人。因为即我，所以更应该尽教育的义务，交给他们自立的能力；因为非我，所以也应同时解放，全部为他们自己所有，成一个独立的人。这样，便是父母对于子女，应该健全的产生，尽力的教育，完全的解放。但有人会怕，仿佛父母从此以后，一无所有，无聊之极了。这种空虚的恐怖和无聊的感想，也即从谬误的旧思想发生；倘明白了生物学的真理，自然便会消灭。但要做解放子女的父母，也应预备一种能力。便是自己虽然已经带着过去的色采，却不失独立的本领和精神，有广博的趣味，高尚的娱乐。要幸福么?连你的将来的生命都幸福了。要“返老还童”，要“老复丁”么?子女便是“复丁”，都已独立而且更好了。这才是完了长者的任务，得了人生的慰安。倘若思想本领，样样照旧，专以“勃(奚谷)”为业，行辈自豪，那便自然免不了空虚无聊的苦痛。或者又怕，解放之后，父子间要疏隔了。欧美的家庭，专制不及中国，早已大家知道；往者虽有人比之禽兽，现在却连“卫道”的圣徒，也曾替他们辩护，说并无“逆子叛弟”了。因此可知：惟其解放，所以相亲；惟其没有“拘挛”子弟的父兄，所以也没有反抗“拘挛”的“逆子叛弟”。若威逼利诱，便无论如何，决不能有“万年有道之长”。例便如我中国，汉有举孝，唐有孝悌力田科，清末也还有孝廉方正，都能换到官做。父恩谕之于先，皇恩施之于后，然而割股的人物，究属寥寥。足可证明中国的旧学说旧手段，实在从古以来，并无良效，无非使坏人增长些虚伪，好人无端的多受些人我都无利益的苦痛罢了。独有“爱”是真的。路粹引孔融说，“父之于子，当有何亲?论其本意，实为情欲发耳。子之于母，亦复奚为，譬如寄物瓶中，出则离矣。”(汉末的孔府上，很出过几个有特色的奇人，不象现在这般冷落，这话也许确是北海先生所说；只是攻击他的偏是路粹和曹操，教人发笑罢了。)虽然也是一种对于旧说的打击，但实于事理不合。因为父母生了子女，同时又有天性的爱，这爱又很深广很长久，不会即离。现在世界没有大同，相爱还有差等，子女对于父母，也便最爱，最关切，不会即离。所以疏隔一层，不劳多虑。至于一种例外的人，或者非爱所能钩连。但若爱力尚且不能钩连，那便任凭什么“恩威，名分，天经，地义”之类，更是钩连不住。或者又怕，解放之后，长者要吃苦了。这事可分两层：第一，中国的社会，虽说“道德好”，实际却太缺乏相爱相助的心思。便是“孝”“烈”这类道德，也都是旁人毫不负责，一味收拾幼者弱者的方法。在这样社会中，不独老者难于生活，即解放的幼者，也难于生活。第二，中国的男女，大抵未老先衰，甚至不到二十岁，早已老态可掬，待到真实衰老，便更须别人扶持。所以我说，解放子女的父母，应该先有一番预备；而对于如此社会，尤应该改造，使他能适于合理的生活。许多人预备着，改造着，久而久之，自然可望实现了。单就别国的往时而言，斯宾塞未曾结婚，不闻他(亻宅)傺无聊；瓦特早没有了子女，也居然“寿终正寝”，何况在将来，更何况有儿女的人呢?或者又怕，解放之后，子女要吃苦了。这事也有两层，全如上文所说，不过一是因为老而无能，一是因为少不更事罢了。因此觉醒的人，愈觉有改造社会的任务。中国相传的成法，谬误很多：一种是锢闭，以为可以与社会隔离，不受影响。一种是教给他恶本领，以为如此才能在社会中生活。用这类方法的长者，虽然也含有继续生命的好意，但比照事理，却决定谬误。此外还有一种，是传授些周旋方法，教他们顺应社会。这与数年前讲“实用主义”的人，因为市上有假洋钱，便要在学校里遍教学生看洋钱的法子之类，同一错误。社会虽然不能不偶然顺应，但决不是正当办法。因为社会不良，恶现象便很多，势不能一一顺应；倘都顺应了，又违反了合理的生活，倒走了进化的路。所以根本方法，只有改良社会。就实际上说，中国旧理想的家族关系父子关系之类，其实早已崩溃。这也非“于今为烈”，正是“在昔已然”。历来都竭力表彰“五世同堂”，便足见实际上同居的为难；拚命的劝孝，也足见事实上孝子的缺少。而其原因，便全在一意提倡虚伪道德，蔑视了真的人情。我们试一翻大族的家谱，便知道始迁祖宗，大抵是单身迁居，成家立为；一到聚族而居，家谱出版，却已在零落的中涂了。况在将来，迷信破了，便没有哭竹，卧冰；医学发达了，也不必尝秽，割股。又因为经济关系，结婚不得不迟，生育因此也迟，或者子女才能自存，父母已经衰老，不及依赖他们供养，事实上也就是父母反尽了义务。世界潮流逼拶着，这样做的可以生存，不然的便都衰落；无非觉醒者多，加些人力，便危机可望较少就是了。但既如上言，中国家庭，实际久已崩溃，并不如“圣人之徒”纸上的空谈，则何以至今依然如故，一无进步呢?这事很容易解答。第一，崩溃者自崩溃，纠缠者自纠缠，设立者又自设立；毫无戒心，也不想到改革，所以如故。第二，以前的家庭中间，本来常有勃(奚谷)，到了新名词流行之后，便都改称“革命”，然而其实也仍是讨嫖钱至于相骂，要赌本至于相打之类，与觉醒者的改革，截然两途。这一类自称“革命”的勃(奚谷)子弟，纯属旧式，待到自己有了子女，也决不解放；或者毫不管理，或者反要寻出“孝经”，勒令诵读，想他们“学于古训”，都做牺牲。这只能全归旧道德旧习惯旧方法负责，生物学的真理决不能妄任其咎。既如上言，生物为要进化，应该继续生命，那便“不孝有三无后为大”，三妻四妾，也极合理了。这事也很容易解答。人类因为无后，绝了将来的生命，虽然不幸，但若用不正当的方法手段，苟延生命而害及人群，便该比一人无后，尤其“不孝”。因为现在的社会，一夫一妻制最为合理，而多妻主义，实能使人群堕落。堕落近于退化，与继续生命的目的，恰恰完全相反。无后只是灭绝了自己，退化状态的有后，便会毁到他人。人类总有些为他人牺牲自己的精神，而况生物自发生以来，交互关联，一人的血统，大抵总与他人有多少关系，不会完全灭绝。所以生物学的真理，决非多妻主义的护符。总而言之，觉醒的父母，完全应该是义务的，利他的，牺牲的，很不易做；而在中国尤不易做。中国觉醒的人，为想随顺长者解放幼者，便须一面清结旧帐，一面开辟新路。就是开首所说的“自己背着因袭的重担，肩住了黑暗的闸门，放他们到宽阔光明的地方去；此后幸福的度日，合理的做人。”这是一件极伟大的要紧的事，也是一件极困苦艰难的事。但世间又有一类长者，不但不肯解放子女，并且不准子女解放他们自己的子女；就是并要孙子曾孙都做无谓的牺牲。这也是一个问题；而我是愿意平和的人，所以对于这问题，现在不能解答。一九一九年十月（原载1919年11月1日“新青年”6卷6号）"
},

{
    "location": "LeetCode/twostring/#",
    "page": "String",
    "title": "String",
    "category": "page",
    "text": ""
},

{
    "location": "LeetCode/twostring/#String-1",
    "page": "String",
    "title": "String",
    "category": "section",
    "text": ""
},

{
    "location": "LeetCode/twostring/#add-and-product-of-two-numeric-string-1",
    "page": "String",
    "title": "add and product of two numeric string",
    "category": "section",
    "text": "function s_add(s1::String, s2::String)\n    !( all(isnumeric,s1) && all(isnumeric,s2) ) && error(\"xx\")\n\n    l1 = length(s1)\n    l2 = length(s2)\n    l  = max(l1,l2) + 1\n    v  = zeros(Int8,l)\n    \n    for i in 1:l-1\n        x1 = i<=l1 ? s1[l1+1-i] - \'0\' : 0\n        x2 = i<=l2 ? s2[l2+1-i] - \'0\' : 0\n        x = x1 + x2\n        if x >= 10\n            v[l+1-i] += x - 10\n            v[l-i]   += 1\n        else\n            v[l+1-i] += x\n        end\n    end\n\n    v[1] != 0 ? reduce(*,string.(v)) : reduce(*,string.(v[2:end]))\nend\n\nusing Test\n@testset \"s_add\" begin\n    @test s_add(\"1\",\"2\") == \"3\"\n    @test s_add(\"1\",\"9\") == \"10\"\n    @test s_add(\"11\",\"99\") == \"110\"\n    @test_throws ErrorException s_add(\"a\",\"2\")\nendfunction s_mul(s1::String, s2::String)\n    !( all(isnumeric,s1) && all(isnumeric,s2) ) && error(\"xx\")\n\n    l1 = length(s1)\n    l2 = length(s2)\n    l  = l1 + l2\n    v  = zeros(Int8,l)\n    \n    for i1 in 1:l1\n        x1 = s1[l1+1-i1] - \'0\'\n        for i2 in 1:l2\n            x2 = s2[l2+1-i2] - \'0\'\n            v[l+2-i1-i2] += x1 * x2\n        end\n    end\n\n    for i in l:-1:1\n        x = v[i]\n        if x>10\n            v[i]    = x%10\n            v[i-1] += floor(Int8,x/10)\n        end\n    end\n\n    v[1] != 0 ? reduce(*,string.(v)) : reduce(*,string.(v[2:end]))\nend\n\nusing Test\n@testset \"s_mul\" begin\n    @test s_mul(\"2\",\"3\") == \"6\"\n    @test s_mul(\"3\",\"7\") == \"21\"\n    @test_throws ErrorException s_mul(\"a\",\"2\")\nend"
},

{
    "location": "LeetCode/palindrome/#",
    "page": "Palindrome",
    "title": "Palindrome",
    "category": "page",
    "text": ""
},

{
    "location": "LeetCode/palindrome/#Palindrome-1",
    "page": "Palindrome",
    "title": "Palindrome",
    "category": "section",
    "text": "determine if a integer or string is palindrome."
},

{
    "location": "LeetCode/palindrome/#Integer-1",
    "page": "Palindrome",
    "title": "Integer",
    "category": "section",
    "text": "function ispa(x::T) where T <: Signed\n    @assert(x>0)\n    y = x\n    z = zero(x)\n    while y != 0\n        z = 10 * z + y%10\n        y = floor(T,y/10)\n    end\n    z == x\nend\n\nusing Test\n@testset \"integer\" begin\n    @test ispa(1)   == true\n    @test ispa(11)  == true\n    @test ispa(12)  == false\n    @test ispa(121) == true\n    @test ispa(122) == false\n    @test_throws MethodError ispa(1.0)\n    @test_throws AssertionError ispa(-11)\nend"
},

{
    "location": "LeetCode/palindrome/#String-1",
    "page": "Palindrome",
    "title": "String",
    "category": "section",
    "text": "function ispa(x::String)\n    i = 1\n    j = length(x)\n    while i <= j\n        !( isnumeric(x[i]) || isalpha(x[i]) ) && (i += 1)\n        !( isnumeric(x[j]) || isalpha(x[j]) ) && (j -= 1)\n        x[i] != x[j] && return false\n        i += 1; j -= 1\n    end\n    return true\nend\n\nusing Test\n@testset \"string\" begin\n    @test ispa(\"121\")   == true\n    @test ispa(\"aba\")   == true\n    @test ispa(\"abc\")   == false\n    @test ispa(\"a,b.a\") == true\nend"
},

{
    "location": "LeetCode/array/#",
    "page": "Array",
    "title": "Array",
    "category": "page",
    "text": ""
},

{
    "location": "LeetCode/array/#Array-1",
    "page": "Array",
    "title": "Array",
    "category": "section",
    "text": ""
},

{
    "location": "LeetCode/array/#Rm-duplicates-A-1",
    "page": "Array",
    "title": "Rm duplicates A",
    "category": "section",
    "text": "Remove duplicates from Sorted arrayusing Testx = sort(rand(1:4,10))\nfunction rmdup!(x)\n    idx = 1\n    for i in 2:length(x)\n        if x[idx] != x[i]\n            idx += 1\n            x[idx] = x[i]\n        end\n    end\n    idx\nend"
},

{
    "location": "LeetCode/array/#Rm-duplicates-B-1",
    "page": "Array",
    "title": "Rm duplicates B",
    "category": "section",
    "text": "Fellow up probrem, add allow elements duplicate once.function rmdup!(x)\n    idx = 2\n    for i in 3:length(x)\n        if x[idx-1] != x[i]\n            idx += 1\n            x[idx] = x[i]\n        end\n    end\n    idx\nend"
},

{
    "location": "LeetCode/array/#Search-array-1",
    "page": "Array",
    "title": "Search array",
    "category": "section",
    "text": "x is a sorted array and circle shift 3 index, find the target value and give its idx.x = [1:10;]\nx = circshift(x,3)\n\nfunction findta(x,ta)\n    n1 = 1\n    n3 = length(x)\n    while n3 >= n1\n        n2 = (n1+n3) >> 1\n        x[n2] == ta && return n2\n\n        if x[n2] >= x[n1]\n            if x[n2] >= ta >= x[n1]\n                n3 = n2\n            else\n                n1 = n2 + 1\n            end\n        else\n            if ta>=x[n1] || ta<=x[n2]\n                n3 = n2\n            else\n                n1 = n2 + 1\n            end\n        end\n    end\n    -1\nend"
},

{
    "location": "LeetCode/hash/#",
    "page": "Hash",
    "title": "Hash",
    "category": "page",
    "text": ""
},

{
    "location": "LeetCode/hash/#Hash-1",
    "page": "Hash",
    "title": "Hash",
    "category": "section",
    "text": ""
},

{
    "location": "LeetCode/hash/#Group-anagrams-1",
    "page": "Hash",
    "title": "Group anagrams",
    "category": "section",
    "text": "Given an array of strings, like [\"tan\", \"nat\", \"ant\", \"abc\", \"cc\", \"bca\" ], return:[\n    [\"tan\", \"nat\", \"ant\"],\n    [\"abc\", \"bca\"],\n    [\"cc\"]\n]mutable struct Stringhash\n    s::String\n    h::Set\n    hit::Bool\nend\n\nfunction dictgroup(sarray::Vector{String})\n\n    result = Vector{String}[]\n\n    sst = Stringhash[]\n    for si in sarray\n        push!(sst,Stringhash(si,Set([si...]),false))\n    end\n\n    for i in 1:length(sst)\n        sst[i].hit == true && continue\n\n        rtemp = String[]\n        push!(rtemp,sst[i].s)\n\n        for j in i+1:length(sst)\n            if sst[i].h == sst[j].h\n                sst[j].hit = true\n                push!(rtemp,sst[j].s)\n            end\n        end\n\n        push!(result,rtemp)\n    end\n\n    return result\n\nend"
},

{
    "location": "LeetCode/heap/#",
    "page": "Heap",
    "title": "Heap",
    "category": "page",
    "text": ""
},

{
    "location": "LeetCode/heap/#Heap-1",
    "page": "Heap",
    "title": "Heap",
    "category": "section",
    "text": ""
},

{
    "location": "LeetCode/heap/#find-n-largest-numbers-of-given-array.-1",
    "page": "Heap",
    "title": "find n largest numbers of given array.",
    "category": "section",
    "text": "Use julia\'s DataStructures library.using DataStructures\n\nx = rand(1000);\nnlargest(10,x)Use numpy\'s partial sortimport numpy as np\n\nx = np.random.rand(1000);\nnp.argpartition(x, -10)[-10:]"
},

{
    "location": "YearBook/#",
    "page": "历史年鉴",
    "title": "历史年鉴",
    "category": "page",
    "text": ""
},

{
    "location": "YearBook/#历史年鉴-1",
    "page": "历史年鉴",
    "title": "历史年鉴",
    "category": "section",
    "text": ""
},

{
    "location": "YearBook/#?-新（汉）-1",
    "page": "历史年鉴",
    "title": "? - 新（汉）",
    "category": "section",
    "text": "note: Note\n以新朝分界，界线分明209 BCE  陈胜吴广起义"
},

{
    "location": "YearBook/#-1",
    "page": "历史年鉴",
    "title": "1620",
    "category": "section",
    "text": "12.26 “五月花”号到达普利茅斯"
},

{
    "location": "YearBook/#-2",
    "page": "历史年鉴",
    "title": "1636",
    "category": "section",
    "text": "10.28 哈佛大学成立"
},

{
    "location": "YearBook/#-3",
    "page": "历史年鉴",
    "title": "1773",
    "category": "section",
    "text": "12.16 波士顿倾茶事件"
},

{
    "location": "YearBook/#-4",
    "page": "历史年鉴",
    "title": "1776",
    "category": "section",
    "text": "7.4 大陆会议通过《独立宣言》"
},

{
    "location": "YearBook/#-5",
    "page": "历史年鉴",
    "title": "1787",
    "category": "section",
    "text": "5.25 美国制宪会议在费城召开"
},

{
    "location": "YearBook/#-6",
    "page": "历史年鉴",
    "title": "1789",
    "category": "section",
    "text": "3.4 美国宪法生效\n4.30 美国联邦政府成立，华盛顿就任第一届总统"
},

{
    "location": "YearBook/#-7",
    "page": "历史年鉴",
    "title": "1812",
    "category": "section",
    "text": "6.18 美英爆发第二次战争"
},

{
    "location": "YearBook/#-8",
    "page": "历史年鉴",
    "title": "1823",
    "category": "section",
    "text": "12.2 美国提出门罗主义，反对欧洲干涉美洲事务"
},

{
    "location": "YearBook/#-9",
    "page": "历史年鉴",
    "title": "1836",
    "category": "section",
    "text": "是年，美国人萨缪尔·摩尔斯发明摩尔斯电码"
},

{
    "location": "YearBook/#-10",
    "page": "历史年鉴",
    "title": "1844",
    "category": "section",
    "text": "7.3 中美签订《望厦条约》"
},

{
    "location": "YearBook/#-11",
    "page": "历史年鉴",
    "title": "1855",
    "category": "section",
    "text": "7.8 美国军舰抵达日本强迫开户通商（黑船事件）"
},

{
    "location": "YearBook/#-12",
    "page": "历史年鉴",
    "title": "1861",
    "category": "section",
    "text": "4.15 美国南北内战爆发"
},

{
    "location": "YearBook/#-13",
    "page": "历史年鉴",
    "title": "1863",
    "category": "section",
    "text": "1.1 林肯签署《解放宣言》"
},

{
    "location": "YearBook/#-14",
    "page": "历史年鉴",
    "title": "1865",
    "category": "section",
    "text": "4.9 美国内战结束\n4.14 林肯被刺，次日身亡"
},

{
    "location": "YearBook/#-15",
    "page": "历史年鉴",
    "title": "1867",
    "category": "section",
    "text": "3.30 美国从沙俄购买了阿拉斯加"
},

{
    "location": "YearBook/#-16",
    "page": "历史年鉴",
    "title": "1879",
    "category": "section",
    "text": "12.21 爱迪生发明电灯"
},

{
    "location": "YearBook/#-17",
    "page": "历史年鉴",
    "title": "1881",
    "category": "section",
    "text": "9.25 鲁迅生于浙江绍兴，名树人，字豫才，小名樟寿"
},

{
    "location": "YearBook/#-18",
    "page": "历史年鉴",
    "title": "1882",
    "category": "section",
    "text": "5.6 美国通过排华法案"
},

{
    "location": "YearBook/#-19",
    "page": "历史年鉴",
    "title": "1898",
    "category": "section",
    "text": "是年春，鲁迅入南京江南水师学堂7.7 美国兼并夏威夷"
},

{
    "location": "YearBook/#-20",
    "page": "历史年鉴",
    "title": "1901",
    "category": "section",
    "text": "是年二月，鲁迅留学日本，入东京弘文学院"
},

{
    "location": "YearBook/#-21",
    "page": "历史年鉴",
    "title": "1903",
    "category": "section",
    "text": "12.17 莱特兄弟发明的飞机成功起飞"
},

{
    "location": "YearBook/#-22",
    "page": "历史年鉴",
    "title": "1904",
    "category": "section",
    "text": "是年八月，鲁迅入仙台医学专门学校"
},

{
    "location": "YearBook/#-23",
    "page": "历史年鉴",
    "title": "1908",
    "category": "section",
    "text": "是年，鲁迅从学章太炎，为光复会会员"
},

{
    "location": "YearBook/#-24",
    "page": "历史年鉴",
    "title": "1912",
    "category": "section",
    "text": "1.1 鲁迅应蔡元培邀，任教育部"
},

{
    "location": "YearBook/#-25",
    "page": "历史年鉴",
    "title": "1918",
    "category": "section",
    "text": "4 是月，鲁迅发表《狂人日记》"
},

{
    "location": "YearBook/#-26",
    "page": "历史年鉴",
    "title": "1923",
    "category": "section",
    "text": "是年，鲁迅《呐喊》、《中国小说史略》印行"
},

{
    "location": "YearBook/#-27",
    "page": "历史年鉴",
    "title": "1925",
    "category": "section",
    "text": "是年，鲁迅《热风》印行"
},

{
    "location": "YearBook/#-28",
    "page": "历史年鉴",
    "title": "1926",
    "category": "section",
    "text": "8 鲁迅离京任厦门大学教授， 十二月辞职\n6 《华盖集》印行\n9 《彷徨》印行"
},

{
    "location": "YearBook/#-29",
    "page": "历史年鉴",
    "title": "1927",
    "category": "section",
    "text": "3 《坟》印行\n5 《华盖集续编》\n10** 《野草》印行"
},

{
    "location": "YearBook/#-30",
    "page": "历史年鉴",
    "title": "1928",
    "category": "section",
    "text": "6.4 皇姑屯事件，张作霖被炸成重伤，当天死于沈阳\n10 《而已集》印行"
},

{
    "location": "YearBook/#-31",
    "page": "历史年鉴",
    "title": "1931",
    "category": "section",
    "text": "9.18 日军借口中国军队炸毁南满体路侵占沈阳，张学良不抵抗，终致日军占领东北全境"
},

{
    "location": "YearBook/#-32",
    "page": "历史年鉴",
    "title": "1932",
    "category": "section",
    "text": "3.1 伪满洲国成立\n9 《三闲集》\n10 《二心集》"
},

{
    "location": "YearBook/#-33",
    "page": "历史年鉴",
    "title": "1933",
    "category": "section",
    "text": "10 《伪自由书》印行"
},

{
    "location": "YearBook/#-34",
    "page": "历史年鉴",
    "title": "1934",
    "category": "section",
    "text": "3 《南腔北调集》印行\n12** 《准风月谈》印行"
},

{
    "location": "YearBook/#-35",
    "page": "历史年鉴",
    "title": "1935",
    "category": "section",
    "text": "5 《集外集》"
},

{
    "location": "YearBook/#-36",
    "page": "历史年鉴",
    "title": "1936",
    "category": "section",
    "text": "1 《故事新编》印行\n6 《花边文学》\n8.18 鲁迅先生病逝"
},

{
    "location": "YearBook/#-37",
    "page": "历史年鉴",
    "title": "1937",
    "category": "section",
    "text": "7 《且介亭杂文》，《且介亭杂文二编》，《且介亭杂文末编》"
},

{
    "location": "YearBook/#-38",
    "page": "历史年鉴",
    "title": "1947",
    "category": "section",
    "text": "11.6 杨德昌出生于上海市。卒于2007.6.29。祖籍广东梅县；1985年与蔡琴结婚，1995年离婚，同年娶台湾钢琴家彭铠立。"
},

{
    "location": "YearBook/#新中国-1",
    "page": "历史年鉴",
    "title": "新中国",
    "category": "section",
    "text": ""
},

{
    "location": "YearBook/#-39",
    "page": "历史年鉴",
    "title": "1971",
    "category": "section",
    "text": "7.9-11  美国总统国家安全事物助理亨利·基辛格秘密访华"
},

{
    "location": "YearBook/#-40",
    "page": "历史年鉴",
    "title": "1972",
    "category": "section",
    "text": "2.21-28  美国总统理查德·尼克松访华\n2.28     中美签署《上海公报》\n9.25     日本首相田中角荣访华\n9.29     中日建交"
},

{
    "location": "YearBook/#-41",
    "page": "历史年鉴",
    "title": "1978",
    "category": "section",
    "text": "3.16 意大利左派组织红色旅绑架意前总理莫罗，用以要挟政府交换狱中同伴，政府拒绝，人质被杀（5.9）"
},

{
    "location": "YearBook/#-42",
    "page": "历史年鉴",
    "title": "1979",
    "category": "section",
    "text": "1.1 中美建交，共同发布《中美建交公报》"
},

{
    "location": "YearBook/#-43",
    "page": "历史年鉴",
    "title": "1982",
    "category": "section",
    "text": "4-6 英国、阿根廷为争夺马尔那斯群岛爆发马岛海战\n8.17 中美签署《八一七公报》，全称《中美就解决美国向台出售武器问题的公告》"
},

{
    "location": "YearBook/#-44",
    "page": "历史年鉴",
    "title": "1985",
    "category": "section",
    "text": "3.11 戈尔巴乔夫出任苏共中央书记"
},

{
    "location": "YearBook/#-45",
    "page": "历史年鉴",
    "title": "1988",
    "category": "section",
    "text": "9.17-10.2 汉城举办第二十四届奥林匹克运动会"
},

{
    "location": "YearBook/#-46",
    "page": "历史年鉴",
    "title": "1999",
    "category": "section",
    "text": "8 赖昌星出逃加拿大"
},

{
    "location": "YearBook/#-47",
    "page": "历史年鉴",
    "title": "1991",
    "category": "section",
    "text": "8.19-21 苏共保守派发动政变，于黑海畔软禁戈尔巴乔夫\n8.24 戈尔巴乔夫辞去苏共总书记\n12.25 苏联总统戈尔巴乔夫辞职\n12.26 苏联最高苏维埃通过决议宣布解体"
},

{
    "location": "YearBook/#-48",
    "page": "历史年鉴",
    "title": "2001",
    "category": "section",
    "text": "7.13 在莫斯科举行的奥林匹克委员会112届年会上，北京取得2008年奥运会举办权\n9.11 九一一事件，基地组织恐怖分子劫持四架飞机分别撞向世贸大厦、五角大楼、国会大厦（未成功）。计造成2977人死亡或失踪\n10.7 美国联军对阿富汗基地组织和塔利班发起反恐战争"
},

{
    "location": "YearBook/#-49",
    "page": "历史年鉴",
    "title": "2003",
    "category": "section",
    "text": "3.20 美英等国对伊拉克发动战争，2010.8.18战争结束\n12.13 萨达姆被捕于家乡提克里特"
},

{
    "location": "YearBook/#-50",
    "page": "历史年鉴",
    "title": "2004",
    "category": "section",
    "text": "9.1-9.3 别斯兰人质事件。车臣武装分子在北奥塞梯共和国别斯兰市一所中学，劫持1200人为人质。最终造成333名人质死亡"
},

{
    "location": "YearBook/#-51",
    "page": "历史年鉴",
    "title": "2006",
    "category": "section",
    "text": "12.30 萨达姆·侯赛因被执行绞刑（宣判日为2006.11.5），终年69岁"
},

{
    "location": "YearBook/#-52",
    "page": "历史年鉴",
    "title": "2007",
    "category": "section",
    "text": "6.29 杨德昌逝世，参见1947.11.6条"
},

{
    "location": "YearBook/#-53",
    "page": "历史年鉴",
    "title": "2008",
    "category": "section",
    "text": "5.12 下午2：28汶川发生8级地震，共计（9.18）造成69227人死亡，374643人受伤，17923人失踪\n8.8-24 北京举办第二十九届奥林匹克运动会"
},

{
    "location": "YearBook/#-54",
    "page": "历史年鉴",
    "title": "2011",
    "category": "section",
    "text": "5.1 奥萨玛·本拉登被美军击毙\n7.23 赖昌星遣送回国"
},

{
    "location": "YearBook/#-55",
    "page": "历史年鉴",
    "title": "2014",
    "category": "section",
    "text": "3.2 俄罗斯增加克里米亚驻军\n3.16 克里米亚举行全民公投\n3.18-21 克里米亚共和国和塞瓦斯托波尔加入俄罗斯联邦"
},

{
    "location": "YearBook/#-56",
    "page": "历史年鉴",
    "title": "2015",
    "category": "section",
    "text": "11.7 两岸领导人于新加坡香格里拉大酒店举行会晤，这是两岸分治以来首次领导人直接交流"
},

{
    "location": "YearBook/#-57",
    "page": "历史年鉴",
    "title": "2016",
    "category": "section",
    "text": "5.20 蔡英文就任台湾省省长，副省长陈建仁。任命林全为行政院长\n12.21 圣多美普林西比与民国断交"
},

{
    "location": "YearBook/#-58",
    "page": "历史年鉴",
    "title": "2017",
    "category": "section",
    "text": "1.20 特朗普（Donald John Trump）正式就任美国总统。特朗普生于1946.6.14，时年71岁\n6.13 巴拿马与民国断交\n9.8 台南市长赖清德转任行政院长，林全下台"
},

{
    "location": "YearBook/#-59",
    "page": "历史年鉴",
    "title": "2018",
    "category": "section",
    "text": "5.1 多米尼加与民国断交\n5.24 布基纳法索与民国断交\n8.21 萨尔瓦多与民国断交\n8.24 澳大利亚总理特恩布尔下台，国防部长斯科特·莫里森（Scott Morrison）出任新总理"
},

{
    "location": "YearBook/peoples/#",
    "page": "人物志",
    "title": "人物志",
    "category": "page",
    "text": ""
},

{
    "location": "YearBook/peoples/#人物志-1",
    "page": "人物志",
    "title": "人物志",
    "category": "section",
    "text": "多采自维基百科"
},

{
    "location": "YearBook/peoples/#台湾省-1",
    "page": "人物志",
    "title": "台湾省",
    "category": "section",
    "text": ""
},

{
    "location": "YearBook/peoples/#马英九-1",
    "page": "人物志",
    "title": "马英九",
    "category": "section",
    "text": "马英九（1950.7.13-），生于香港九龙油麻地，祖籍湖南衡山县。1952年定居台北。 毕业于台大法律系，后获得哈佛大学司法学博士学位。 曾任蒋经国英文翻译。 1993年受行政院长连战之邀出任法务部长。 1998年击败陈水扁任台北市市长。 2005年当选国民党党主席。 2008年当选台湾省省长。 2012年连任。 2016年卸任。"
},

{
    "location": "wiki/wiki/#",
    "page": "组织",
    "title": "组织",
    "category": "page",
    "text": ""
},

{
    "location": "wiki/wiki/#组织-1",
    "page": "组织",
    "title": "组织",
    "category": "section",
    "text": ""
},

{
    "location": "wiki/wiki/#红色旅-1",
    "page": "组织",
    "title": "红色旅",
    "category": "section",
    "text": "意大利极左派组织，成立于1970年，主要创建者是特伦托大学的一名社会学学生雷纳托·库乔。 该组织最著名的行动是1978年绑架意大利前总理莫罗。"
},

]}
